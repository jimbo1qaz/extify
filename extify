#!/usr/bin/env python3

import json
import os
from os.path import expandvars, expanduser

import sys
from path import Path

# $HOME/.config/mimeapps.list
# https://wiki.archlinux.org/index.php/Default_applications#Default_mimeapps.list_files


# **** UTILITIES

def expand(path):
    return expandvars(expanduser(path))

# **** APPLICATION
from collections import OrderedDict

DESKTOP = '''[Desktop Entry]
Version=1.0
Type=Application
Name={}
Comment=Created by extify
Exec={} %F
Terminal=true
'''

def write_app(path):
    # **** APPLICATION.desktop
    # share/applications

    d_data = DESKTOP.format(path, path)

    desk_path = '%s.desktop' % path
    with open(expand('~/.local/share/applications/' + desk_path), 'w') as d_file:
        d_file.write(d_data)

    return desk_path


# **** EXTENSION
MIMETYPE = '''<?xml version="1.0" encoding="utf-8"?>
<mime-info xmlns='http://www.freedesktop.org/standards/shared-mime-info'>
<mime-type type="{}">
    <glob pattern="*.{}"/>
</mime-type>
</mime-info>
'''

def write_ext(desk_path, ext):
    # **** EXTENSION.xml
    # share/mime/packages

    ext_type = 'text/x-' + ext
    e_data = MIMETYPE.format(ext_type, ext)
    with open(expand('~/.local/share/mime/packages/%s.xml' % ext), 'w') as e_file:
        e_file.write(e_data)

    # .config/mimeapps.list
    # xdg-mime default app.desktop mime/mime
    os.system('xdg-mime default {} {}'
              .format(desk_path, ext_type))


def update_db():
    # https://wiki.archlinux.org/index.php/Default_applications#Example:_.xml_and_related_.desktop_configuration
    os.system('update-desktop-database ~/.local/share/applications')
    os.system('update-mime-database    ~/.local/share/mime')


def main():
    _ = sys.argv

    prog = sys.argv[1]
    exts = sys.argv[2:]

    desk_path = write_app(prog)
    for ext in exts:
        if ext[0] == '.':
            ext = ext[1:]

        if '.' in ext:
            raise ValueError("I'm sorry Dave, but %s is not a valid file extension." % ext)

        write_ext(desk_path, ext)

    update_db()


if __name__ == '__main__':
    main()
